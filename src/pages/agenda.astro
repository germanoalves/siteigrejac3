---
// Component imports
import { Layout } from "@globals"
---

<Layout title="Nossa Agenda - C3">
  <section
    class="py-8 flex flex-col justify-center items-center z-20 mt-96 overflow-hidden"
  >
    <div class="text-left">
      <h2
        class="text-gray-700 text-3xl font-extrabold font-rubbik mb-5 border-l-4 border-gray-700 pl-2 ml-0 my-6 dark:text-white dark:border-white"
      >
        Nossa Agenda
      </h2>

      <div id="lista_agenda" class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div id="titleContainer"></div>
        <div id="contentContainer"></div>
        <div id="dataEventoDiv"></div>
      </div>
    </div>
  </section>
</Layout>

<script>
  import bookmark from "../../src/assets/img/bookmark.png"
  import bgagenda from "../assets/img/worship.png"
  import calendar from "../assets/img/calendar.png"

  async function fetchData() {
    try {
      const response = await fetch(
        "https://igreja.natuspixel.com.br/svr/wp-json/wp/v2/posts?categories=4"
      )
      const data = await response.json()

      data.forEach((item) => {
        const grid = document.querySelector("#lista_agenda")

        const cardDiv = document.createElement("div")
        cardDiv.classList.add(
          "flex",
          "flex-col",
          "relative",
          "bg-white",
          "border-r-1",
          "border-l-1",
          "border-b-2",
          "border-solid",
          "border-gray-300",
          "p-3",
          "mb-4",
          "sm:mb-0",
          "rounded-lg",
          "shadow-xl",
          "dark:bg-gray-500"
        )

        const cardContentDiv = document.createElement("div") //novo
        cardContentDiv.classList.add("flex", "flex-row", "flex-grow")

        const ribbonDiv = document.createElement("div")
        ribbonDiv.classList.add(
          "absolute",
          "top-0",
          "right-0",
          "transform",
          "text-white",
          "bg-gray-200",
          "rounded-bl-lg",
          "rounded-tr-lg",
          "px-3",
          "py-1",
          "-rotate-180",
          "dark:bg-gray-600"
        )
        ribbonDiv.innerHTML = `<img src="${bookmark}" width='20' height='20'>`
        cardDiv.appendChild(ribbonDiv)

        const titleDiv = document.createElement("div")
        titleDiv.classList.add(
          "text-lg",
          "font-semibold",
          "text-gray-700",
          "uppercase",
          "font-rubbik",
          "mt-6",
          "dark:text-white"
        )
        titleDiv.textContent = item.title.rendered

        const contentDiv = document.createElement("div")
        contentDiv.classList.add(
          "mt-2",
          "b-0",
          "mb-6",
          "text-gray-500",
          "dark:text-gray-800"
        )
        contentDiv.innerHTML = item.content.rendered

        cardContentDiv.appendChild(contentDiv) //novo

        const dataEvento = item.acf.data_evento
        const parts = dataEvento.split("-") // Divide a data em partes [ano, mês, dia]
        const formattedDate = `${parts[2]}-${parts[1]}-${parts[0]}` // Formata como "DD-MM-YYYY"

        const dataEventoDiv = document.createElement("div")
        dataEventoDiv.classList.add(
          //"mt-auto",
          "h-full",
          "mb-6",
          "border-t-2",
          "border-gray-100",
          "border-solid",
          "dark:border-gray-600"
        )
        dataEventoDiv.innerHTML = `<div class="flex flex-row items-center"><img src="${calendar}" class="w-4 h-4 mr-1" /><span class='font-bold text-gray-500 dark:text-gray-800 mr-1'>Data Evento: </span> <span class='text-gray-500 dark:text-white'>${formattedDate}</span></div>`

        const imageDiv = document.createElement("div")
        imageDiv.classList.add(
          "max-w-xs",
          "h-full",
          "p-0",
          "mt-auto",
          "rounded-lg",
          "overflow-visible"
        ) // classes da imagem

        const image = document.createElement("img")
        image.src = bgagenda
        image.alt = "Agenda Image"

        cardDiv.appendChild(titleDiv)
        cardDiv.appendChild(contentDiv)
        cardDiv.appendChild(dataEventoDiv)

        imageDiv.appendChild(image)
        cardDiv.appendChild(imageDiv)
        cardDiv.appendChild(cardContentDiv)

        grid.appendChild(cardDiv)
      })
    } catch (error) {
      console.error("Erro ao buscar dados:", error)
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    fetchData()
  })
</script>

<!-- ---
// Component imports
import { Layout } from "@globals"
---

<Layout title="A Família C3">
  <section
    class="py-8 px-6 flex-1 flex flex-col justify-center items-center z-20 mt-96"
  >
    <div>
      <div id="titleContainer"></div>
      <div id="contentContainer"></div>
      <div id="videoContainer"></div>
    </div>
  </section>
</Layout>

<script>
  async function fetchData() {
    try {
      const response = await fetch(
        "https://igreja.natuspixel.com.br/svr/wp-json/wp/v2/posts?categories=3"
      )
      const data = await response.json()

      const dataContainer = document.getElementById("dataContainer")

      data.forEach((item) => {
        const itemDiv = document.createElement("div")
        itemDiv.classList.add("item-container")

        const itemTitleAndContentDiv = document.createElement("div")
        itemTitleAndContentDiv.classList.add("item-title-content-container")

        const titleDiv = document.createElement("div")
        titleDiv.classList.add("title-container")
        titleDiv.textContent = item.title.rendered
        itemTitleAndContentDiv.appendChild(titleDiv)

        const contentDiv = document.createElement("div")
        contentDiv.classList.add("content-container")
        contentDiv.innerHTML = item.content.rendered
        itemTitleAndContentDiv.appendChild(contentDiv)

        const youtubeURL = item.acf.url_pregacao
        const videoId = getYoutubeVideoId(youtubeURL)

        if (videoId) {
          const youtubeIFrame = document.createElement("iframe")
          youtubeIFrame.src = `https://www.youtube.com/embed/${videoId}`
          youtubeIFrame.width = "640"
          youtubeIFrame.height = "360"
          youtubeIFrame.allowFullscreen = true

          itemTitleAndContentDiv.appendChild(youtubeIFrame)
        }

        itemDiv.appendChild(itemTitleAndContentDiv)
        dataContainer.appendChild(itemDiv)
      })
    } catch (error) {
      console.error("Erro ao buscar dados:", error)
    }
  }

  function getYoutubeVideoId(url) {
    const match = url.match(/v=([^&]+)/)
    return match ? match[1] : null
  }

  // Chama a função de busca de dados quando a página é carregada
  document.addEventListener("DOMContentLoaded", () => {
    fetchData()
  })
</script> -->
